<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx" 
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	   xmlns:jee="http://www.springframework.org/schema/jee" 
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd 
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/task  
		http://www.springframework.org/schema/task/spring-task-3.2.xsd" default-lazy-init="true"> 
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<context:component-scan base-package="com.chainself">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan> 


	 <!-- 启用Aop AspectJ注解 -->
    <aop:aspectj-autoproxy/>
        
         
	<!--  MySQL 数据源相关配置 -->
	<!-- Jpa Entity Manager 配置 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
		<property name="dataSource" ref="dataSourceMysql"/>
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<property name="packagesToScan" value="com.chainself"/>
		 
		<property name="jpaProperties">
			<props>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean> 
	
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL" />
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
	</bean>

	<!-- Spring Data Jpa配置 -->
 	<jpa:repositories base-package="com.chainself"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
   
	<!-- Jpa 事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	  
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
 
	<!-- production环境 -->
 	<beans profile="production">
 	 
 		<context:property-placeholder ignore-unresolvable="true"
			location="classpath*:/application.properties" />
 					
		<!-- DBCP连接池 -->
		<bean id="dataSourceMysql" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
		      <!-- 基本属性 url、user、password -->
		      <property name="driverClassName" value="${mysql.driver}" />
			  <property name="url" value="${mysql.url}" />
			  <property name="username" value="${mysql.username}" />
			  <property name="password" value="${mysql.password}" />
			  <property name="defaultAutoCommit" value="false" />
			  
			    <!-- 配置初始化大小、最小、最大 -->
		      <property name="initialSize" value="${mysql.initialSize}" />
			  <property name="maxActive" value="${mysql.maxActive}" /> 
			  <property name="minIdle" value="${mysql.minIdle}" /> 
			   
		      <!-- 配置获取连接等待超时的时间 -->
		      <property name="maxWait" value="60000" />
		
		      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		      <property name="timeBetweenEvictionRunsMillis" value="60000" />
		
		      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		      <property name="minEvictableIdleTimeMillis" value="300000" />
		
		      <property name="validationQuery" value="SELECT 'x'" />
		      <property name="testWhileIdle" value="true" />
		      <property name="testOnBorrow" value="false" />
		      <property name="testOnReturn" value="false" />
		
		      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		      <property name="poolPreparedStatements" value="true" />
		      <property name="maxPoolPreparedStatementPerConnectionSize" value="100" />
		
		      <!-- 配置监控统计拦截的filters -->
		      <property name="filters" value="stat" />
		      
		      <!-- 对于建立连接过长的连接强制关闭 -->
			  <property name="removeAbandoned" value="true" /> 
			  <!-- 如果连接建立时间超过了30分钟，则强制将其关闭   -->
			  <property name="removeAbandonedTimeout" value="1800" /> 
			  <!-- 将当前关闭动作记录到日志   -->
			  <property name="logAbandoned" value="true" /> 
		</bean>
		 
		 
	</beans> 
	 
</beans>